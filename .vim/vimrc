set nocompatible               " be iMproved
filetype off                   " required!

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required! 
Bundle 'gmarik/vundle'

Bundle 'L9'
Bundle 'FuzzyFinder'
Bundle 'https://github.com/yandy/vim-omnicppcomplete.git'
Bundle 'git://github.com/tpope/vim-surround.git'
Bundle 'AutoComplPop'
Bundle 'git://github.com/tpope/vim-fugitive.git'

set ts=4
set hidden
set shiftwidth=4
set ai                  " auto indenting
set cindent
set history=100         " keep 100 lines of history
set ruler               " show the cursor position
syntax on               " syntax highlighting
set hlsearch            " highlight the last searched term

filetype plugin indent on

set rnu
set ignorecase

au BufEnter *.hs set expandtab
au BufEnter *.h set noexpandtab
au BufEnter *.c set noexpandtab
au BufEnter *.cpp set noexpandtab
au BufEnter *.py set noexpandtab
au BufEnter *.sh set noexpandtab
au BufEnter *.java set noexpandtab

colorscheme sonofobsidian
set guifont=ProggyCleanTT\ 12.5
 
map <F12> :!ctags -R --sort=yes --c++-kinds=+p --fields=+iaS --extra=+q .<CR>

inoremap <C-Space> <C-x><C-o>
inoremap <Nul> <C-x><C-o>
noremap <Space> za

set tags+=~/.vim/tags/cpp

let OmniCpp_ShowPrototypeInAbbr=1
let OmniCpp_MayCompleteDot=1
let OmniCpp_MayCompleteArrow=1
let OmniCpp_MayCompleteScope=1

set completeopt=menuone,menu,longest,preview

set foldmethod=manual
set foldnestmax=10
set nofoldenable
set foldlevel=1
set nowrap

let mapleader=","
nnoremap <leader>e :FufCoverageFile<cr>
nnoremap <leader>b :FufBuffer<cr>
nnoremap <leader>d :FufDir<cr>
nnoremap <leader>o :FufFile<cr>
nnoremap <leader>, :b#<cr>
nnoremap <leader>1 :diffget //2<cr>:diffupdate<cr>
nnoremap <leader>3 :diffget //3<cr>:diffupdate<cr>
nnoremap <leader>s :Gstatus<cr>
nnoremap <leader>c :Gcommit<cr>

"nnoremap <leader>w <C-w>k
"nnoremap <leader>s <C-w>j
"nnoremap <leader>a <C-w>h
"nnoremap <leader>d <C-w>l
nnoremap <leader>q <C-w>c

nnoremap <leader>v :vsplit<cr>
inoremap jj <ESC>

au BufWinLeave *.* mkview
au BufWinEnter *.* silent loadview

au BufNewFile,BufRead,BufEnter *.java inoremap <C-Space> <C-x><C-u>
au BufNewFile,BufRead,BufEnter *.java inoremap <Nul> <C-x><C-u>

let g:acp_behaviorJavaEclimLength = 0
function MeetsForJavaEclim(context)
  return g:acp_behaviorJavaEclimLength >= 0 &&
        \ a:context =~ '\k\.\k\{' . g:acp_behaviorJavaEclimLength . ',}$'
endfunction
let g:acp_behavior = {
    \ 'java': [{
      \ 'command': "\<c-x>\<c-u>",
      \ 'completefunc' : 'eclim#java#complete#CodeComplete',
      \ 'meets'        : 'MeetsForJavaEclim',
    \ }]
  \ }

highlight Pmenu ctermbg=grey
highlight PmenuSel ctermfg=black ctermbg=yellow
